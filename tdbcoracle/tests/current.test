# tdbcoracle.test --
#
#	Tests for the tdbc::oracle bridge
#
# Copyright (c) 2008 by Kevin B. Kenny
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @(#) $Id: tdbcoracle.tcl,v 1.47 2008/02/27 02:08:27 kennykb Exp $
#
#------------------------------------------------------------------------------

lappend auto_path .
package require tdbc::oracle
if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2
    namespace import -force ::tcltest::*
}

# We need to know the parameters of the Oracle database for testing.

set connFlags {}
if {[info exists env(TEST_DBLINK)]} {
    lappend connFlags -host $env(TEST_HOST)
}
if {[info exists env(TEST_USER)]} {
    lappend connFlags -user $env(TEST_USER)
}
if {[info exists env(TEST_PASSWD)]} {
    lappend connFlags -passwd $env(TEST_PASSWD)
}

#------------------------------------------------------------------------------

test tdbc::oracle-1.1 {create a connection, wrong # args} {*}{
    -body {
	tdbc::oracle::connection create
    }
    -returnCodes error
    -match glob
    -result {wrong # args*}
}

test tdbc::oracle-1.2 {create a connection, connection string missing} {*}{
    -body {
	tdbc::oracle::connection create db -user
    }
    -returnCodes error
    -match glob
    -result {wrong # args*}
}

test tdbc::oracle-1.3 {create a connection, bad arg} {*}{
    -body {
	tdbc::oracle::connection create db -rubbish rubbish
    }
    -returnCodes error
    -match glob
    -result {bad option "-rubbish"*}
}

test tdbc::oracle-1.9 {create a connection, failure} {*}{
    -body {
	set status [catch {
	    tdbc::oracle::connection create db -dblink rubbish.example
	} result]
	list $status $result $::errorCode
    }
    -match glob
    -result {1 {Unknown Oracle server host*} {TDBC GENERAL_ERROR HY000 ORACLE *}}
}

test tdbc::oracle-1.10 {create a connection, successful} {*}{
    -body {
	tdbc::oracle::connection create ::db {*}$connFlags
    }
    -result ::db
    -cleanup {
	catch {rename ::db {}}
    }
}

#------------------------------------------------------------------------------
#
# The tests that follow all require a connection to a database.

